name: Auto Release

on:
  push:
    branches:
      - main

jobs:
  auto-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Determine version bump
        id: version
        run: |
          # Get the latest tag
          git fetch --tags
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          
          # Check commit messages since last tag for keywords
          MAJOR_CHANGE=$(git log $LATEST_TAG..HEAD --pretty=format:"%s" | grep -i -E '\bBREAKING CHANGE\b|\bMAJOR\b' || echo "")
          MINOR_CHANGE=$(git log $LATEST_TAG..HEAD --pretty=format:"%s" | grep -i -E '\bFEAT\b|\bFEATURE\b|\bMINOR\b' || echo "")
          
          # Parse current version
          CURRENT_VERSION=${LATEST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          
          # Determine new version
          if [ ! -z "$MAJOR_CHANGE" ]; then
            # Major change
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
            BUMP_TYPE="major"
          elif [ ! -z "$MINOR_CHANGE" ]; then
            # Minor change
            MINOR=$((MINOR + 1))
            PATCH=0
            BUMP_TYPE="minor"
          else
            # Patch change
            PATCH=$((PATCH + 1))
            BUMP_TYPE="patch"
          fi
          
          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "bump_type=$BUMP_TYPE" >> $GITHUB_OUTPUT
          echo "New version will be: $NEW_VERSION (${BUMP_TYPE} bump)"
      
      - name: Create and push tag
        run: |
          NEW_VERSION=${{ steps.version.outputs.new_version }}
          BUMP_TYPE=${{ steps.version.outputs.bump_type }}
          
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Create and push the new tag
          git tag -a $NEW_VERSION -m "Release $NEW_VERSION ($BUMP_TYPE bump)"
          git push origin $NEW_VERSION
          
          echo "Created and pushed tag: $NEW_VERSION"
